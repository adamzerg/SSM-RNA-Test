q()
y <- 10
f <- function(x) {y <- 2 y^2+g(x)}
f <- function(x) {y <- 2 y^2+g(x)} g<-function(x){x*y}
f <- function(x) {y <- 2 y^2} g<-function(x){x*y}
f <- function(x) {y <- 2 y^2+g(x)}
g<-function(x){x*y}
f <- function(x) {y <- 2 y^2+g(x)}
f<-function(x){y<-2 y^2+g(x)}
f<-function(x){y<-2 y*2+g(x)}
f<-function(x){y<-2 y^2+g(x)}
help strptime
help strptime()
strptime -help()
help(strptime)
taskscheduler_stop("r_web_scraping_SSM_RNA_test")
taskscheduler_delete("r_web_scraping_SSM_RNA_test")
taskscheduler_create(
taskname = "r_web_scraping_SSM_RNA_test",
rscript = "D:\\Documents\\GitHub\\SSM RNA Test\\aptmon-scraping\\SSM-aptmon-scraping.R",
schedule = "MINUTE",
starttime = format(Sys.time() + 62, "%H:%M"),
startdate = format(Sys.Date(), "%Y-%m-%d"),
Rexe = file.path(Sys.getenv("R_HOME"),"bin","Rscript.exe")
)
library(taskscheduleR)
taskscheduler_stop("r_web_scraping_SSM_RNA_test")
taskscheduler_create(
taskname = "r_web_scraping_SSM_RNA_test",
rscript = "D:\\Documents\\GitHub\\SSM RNA Test\\aptmon-scraping\\SSM-aptmon-scraping.R",
schedule = "MINUTE",
starttime = format(Sys.time() + 62, "%H:%M"),
startdate = format(Sys.Date(), "%Y-%m-%d"),
Rexe = file.path(Sys.getenv("R_HOME"),"bin","Rscript.exe")
)
taskscheduler_stop("r_web_scraping_SSM_RNA_test")
taskscheduler_delete("r_web_scraping_SSM_RNA_test")
taskscheduler_create(
taskname = "r_web_scraping_SSM_RNA_test",
rscript = "SSM-aptmon-scraping.R",
schedule = "MINUTE",
starttime = format(Sys.time() + 62, "%H:%M"),
startdate = format(Sys.Date(), "%Y-%m-%d"),
Rexe = file.path(Sys.getenv("R_HOME"),"bin","Rscript.exe")
)
taskscheduler_create(
taskname = "r_web_scraping_SSM_RNA_test",
rscript = "D:\\Documents\\GitHub\\SSM RNA Test\\aptmon-scraping\\SSM-aptmon-scraping.R",
schedule = "MINUTE",
starttime = format(Sys.time() + 62, "%H:%M"),
startdate = format(Sys.Date(), "%Y-%m-%d"),
Rexe = file.path(Sys.getenv("R_HOME"),"bin","Rscript.exe")
)
out_path <- rmarkdown::render("markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
browseURL(out_path)
out_path <- rmarkdown::render("ssm-rna-test/markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
path()
pathwd()
getwd()
out_path <- rmarkdown::render("GitHub/ssm-rna-test/markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
browseURL(out_path)
out_path <- rmarkdown::render("GitHub/ssm-rna-test/markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
browseURL(out_path)
out_path <- rmarkdown::render("GitHub/ssm-rna-test/markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
browseURL(out_path)
out_path <- rmarkdown::render("GitHub/ssm-rna-test/markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
browseURL(out_path)
rmarkdown::render("GitHub/ssm-rna-test/markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
out_path <- rmarkdown::render("GitHub/ssm-rna-test/markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
browseURL(out_path)
str(scrp)
filelist <- dir('aptmon-scraping/20211004', full.names=TRUE)
scrp <- data.frame()
for (file in filelist) {
filetimestr <- sub(".csv", "",sub(".*-", "", file))
filetime <- strptime(filetimestr,"%Y%m%d%H%M%S")
temp <- read.csv(file, na = "---")
temp$DateTime <- as.POSIXlt(filetime)
scrp <- rbind(scrp,as.data.frame(temp))
}
str(scrp)
getwd()
setwd( "D:/Documents/GitHub/ssm-rna-test/")
getwd()
library(flux)
library(readxl)
library(dplyr)
library(reshape)
library(ggplot2)
library(stringr)
library(tidyr)
library(gridExtra)
library(ggmap)
library(plotly)
library(GGally)
filelist <- dir('aptmon-scraping/20211004', full.names=TRUE)
scrp <- data.frame()
for (file in filelist) {
filetimestr <- sub(".csv", "",sub(".*-", "", file))
filetime <- strptime(filetimestr,"%Y%m%d%H%M%S")
temp <- read.csv(file, na = "---")
temp$DateTime <- as.POSIXlt(filetime)
scrp <- rbind(scrp,as.data.frame(temp))
}
str(scrp)
attr(scrp$DateTime, "tzone") <- "GMT"
scrp$DateTimeRound <- round(scrp$DateTime, "30mins")
scrp$WaitingQueue <- as.numeric(as.character(sub("*浜?", "", scrp$杓€欎汉鏁?)))
scrp$WaitingMinutes <- as.numeric(as.character(sub("鍒嗛悩", "",sub(".*>", "", scrp$绛夊€欐檪闁?))))
scrp$StationCount <- rowSums(scrp[ ,c("鍙ｆ帯妯ｉ粸", "榧绘帯妯ｉ粸")], na.rm=TRUE)
scrp$HourNumber <-
sapply(strsplit(substr(scrp$DateTimeRound,12,16),":"),
function(x) {
x <- as.numeric(x)
x[1]+x[2]/60
}
)
getwd()
attr(scrp$DateTime, "tzone") <- "GMT"
str(scrp)
attr(scrp$DateTime, "tzone")
out_path <- rmarkdown::render("markdown/SSM-NAT-EDA-Oct/SSM-NAT-EDA-Oct.rmd")
browseURL(out_path)
str(scrp)
filelist <- dir('aptmon-scraping/20211004', full.names=TRUE)
scrp <- data.frame()
for (file in filelist) {
filetimestr <- sub(".csv", "",sub(".*-", "", file))
filetime <- strptime(filetimestr,"%Y%m%d%H%M%S")
temp <- read.csv(file, na = "---")
temp$DateTime <- as.POSIXlt(filetime)
scrp <- rbind(scrp,as.data.frame(temp))
}
str(scrp)
tail(scrp)
View(scrp)
install.pacakges("rticles")
install.packages("rticles")
library(rticles)
install.packages("devtools")
devtools::install_github("mikey-harper/example-rmd-templates")
